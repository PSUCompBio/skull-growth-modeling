/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      dynamicMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Select the type of dynamicFvMesh, and load custom library
dynamicFvMesh           dynamicRefineFvMesh; 
//dynamicFvMesh		dynamicMotionSolverFvMesh;

//solver                  mesquiteMotionSolver;
//solver                  laplace;
//diffusivity             uniform 1.0;
//diffusivity             quadratic;
//distancePatches         (RIGHT);
//frozenDiffusion         off;


dynamicRefineFvMeshCoeffs
{
	refineInterval 20;
	field oGrad;
	lowerRefineLevel 1;
	upperRefineLevel 500;
	unrefineLevel 10;
	nBufferLayers 0;
	maxRefinement 1;
	maxCells 2000000000;
	correctFluxes ((a none) (h none) (DU none));
	dumpLevel true;
}


mesquiteOptions
{
    // Optimization metric
//     optMetric               AspectRatioGamma;
    optMetric
    {
//         firstMetric   EdgeLength;
        firstMetric MeanRatio;
//         secondMetric MeanRatio;
        secondMetric  AspectRatioGamma;
    }

    // Objective function
    objFunction             CompositeOFAdd;

    // Optimization algorithm
    optAlgorithm            FeasibleNewton;
//     optAlgorithm            ConjugateGradient;

    // Termination criteria sub-dictionary (takes default values if not specified)
    // Specifying an empty sub-dictionary terminates with available options
    tcInner
    {
       //relGradL2            1e-2;
       //cpuTime              0.5;
       iterationLimit       5;
    }
    // tcOuter
    // {}

    sliverThreshold        0.05;

    // For composite functions, two objectives need to be specified
    firstFunction           LInf;
    secondFunction          LPtoP;

    // For scaled functions, scale and objective needs to be specified
    // scaleFunction        PMeanP;
    // scale                1.5;

    // Power value for the LPtoP objective function
    pValue                  20;
    power                   2;

    // Specify a tolerance for the CG solver
    tolerance               1e-2;

    // Specify number of CG sweeps
    nSweeps                 1;

    // Specify a relaxation factor, if necessary
    //relaxationFactor        0.1;

    // Specify slip patches for the motionSolver
    slipPatches
    {
        FRONT;
        BACK;
        TOP;
	BOTTOM;
	RIGHT;
    }

    cylindricalConstraints
    {
        // Specify options per slip patch
     //   sideWall
     //   {
    //        axisPoint      (0.0 0.0 0.0);
     //       axisVector     (0.0 0.0 1.0);
     //       radius          1.0;
     //   }
    }

    // Specify fixedValue patches for the motionSolver
    fixedValuePatches
    {
        RIGHT
        {
            //type          angularOscillatingDisplacement;
            //amplitude     -0.0125;
            type          oscillatingDisplacement;
            amplitude     (1e-3 0 0);
           // axis          (1 0 0);
           // origin        (0 0 0);
           // angle0        0.0;
            omega         1e-7;
            value         uniform (0 0 0);
        }
    }

    // Specify interval for surface smoothing
    surfInterval            1;
}

//- Options for dynamicTopoFvMesh
dynamicTopoFvMesh
{
    //- Should all options be made mandatory?
    //- Useful for first-time use.
    allOptionsMandatory no;

    //- Set run-time debug level [0-5]
    // debug               0;

    //- Specify the number of threads
    threads             1;

    //- Specify re-meshing interval
    //- Negative value implies no re-meshing
    interval            1;

    //- Specify whether the length-scale field
    //- should be dumped to disk
    dumpLengthScale     false;

    //- sliverThreshold specifies the
    //- quality criteria for sliver removal.
    sliverThreshold     0.35;

    //- Should the tool attempt to remove slivers
    //- that fall below the sliverThreshold value?
    removeSlivers       false;

    //- Skip mapping step. Useful while using
    //- this tool as a pre-processor
    // skipMapping         true;

    // Toggle edgeRefinement on/off
    edgeRefinement      yes;

    //- Options for edge-bisection/collapse.
    //-   The edgeRefinement flag must be set for
    //-   the following options to have effect
    refinementOptions
    {
        collapseRatio   0.5;
        bisectionRatio  1.5;
        growthFactor    1.00;

        //- By default, existing boundary edge-lengths
        //- are used for length-scales.
        //- Length-scale can be fixed for certain patches.
        fixedLengthScalePatches
        {
            //topWall     0.2;
            //bottomWall  0.2;
            //sideWall    0.2;
            //outlet      0.2;
	    TOP		5e-4;
	    BOTTOM	5e-4;
	    FRONT	5e-4;
	    BACK	5e-4;
	    LEFT	5e-4;
	    RIGHT	5e-4;
	    
        }

        //- Avoid refinement on certain patches, if necessary
        noModificationPatches
        {RIGHT;
	LEFT;}

        //- Set floating length-scale values on certain patches
        freeLengthScalePatches
        {}

        //- Limit lengthScales to specified values, if necessary
        // minLengthScale   0.1;
        // maxLengthScale   0.3;

        //- Field-based refinement options
        // fieldRefinement  gamma;
        // fieldLengthScale 0.005;
        // lowerRefineLevel 0.001;
        // upperRefineLevel 0.999;
        // maxRefineLevel   4;
        // meanScale        0.015;
    }

    //- If the number of modifications are to be limited, set this option
    // maxModifications   1000;

    //- Load custom libraries for metrics
    // tetMetricLibs      ("libtetMetrics.so");

    //- Tetrahedral mesh quality metric
    tetMetric          Knupp;

    //- Avoid 2-2 swapping on certain patches
    noSwapPatches
    {}
}

// ************************************************************************* //
